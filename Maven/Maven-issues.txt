

1. mvn package or mvn clean test was giving below error:

B/s)
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /home/ec2-user/maven_project/my-app/target/classes
[INFO] -------------------------------------------------------------
[ERROR] COMPILATION ERROR :
[INFO] -------------------------------------------------------------
[ERROR] No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK?
[INFO] 1 error
[INFO] -------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  5.291 s
[INFO] Finished at: 2020-03-05T05:30:07Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.0:compile (default-compile) on project my-app: Compilation failure
[ERROR] No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK?
[ERROR]


Issue was during java installation, we installed only jre but not JDK. details as below
=======================
yum install Java
->the above command will install the default java-11-openjdk.x86_64(latest one at the time of writing) package. But this package doesn't include JDK and
hence, Maven version was running fine but mvn package wasn't. To make them run we need to dowdload JDK. In general a package with ****-devel is the package
contains JDK, it can be found by doing yum search as below:
yum search java|grep -i java-

example:
[root@ip-172-31-88-36 ~]# yum search java|grep -i java-
Last metadata expiration check: 0:31:28 ago on Thu 05 Mar 2020 06:16:19 AM UTC.
java-atk-wrapper.x86_64 : Java ATK Wrapper
libguestfs-java-devel.x86_64 : Java development package for libguestfs
abrt-java-connector.x86_64 : JNI Agent library converting Java exceptions to
mariadb-java-client.noarch : Connects applications developed in Java to MariaDB
java-11-openjdk.x86_64 : OpenJDK Runtime Environment 11
java-1.8.0-openjdk.x86_64 : OpenJDK Runtime Environment 8
java-1.8.0-openjdk.x86_64 : OpenJDK Runtime Environment 8
java-11-openjdk-src.x86_64 : OpenJDK Source Bundle 11
java-11-openjdk-demo.x86_64 : OpenJDK Demos 11
java-11-openjdk-devel.x86_64 : OpenJDK Development Environment 11
java-11-openjdk-jmods.x86_64 : JMods for OpenJDK 11
java-1.8.0-openjdk-src.x86_64 : OpenJDK Source Bundle 8
java-11-openjdk-javadoc.x86_64 : OpenJDK 11 API documentation
java-1.8.0-openjdk-demo.x86_64 : OpenJDK Demos 8
java-11-openjdk-headless.x86_64 : OpenJDK Headless Runtime Environment 11
java-1.8.0-openjdk-devel.x86_64 : OpenJDK Development Environment 8                         <- the one we are looking for
java-1.8.0-openjdk-javadoc.noarch : OpenJDK 8 API documentation
java-1.8.0-openjdk-headless.x86_64 : OpenJDK Headless Runtime Environment 8
java-11-openjdk-javadoc-zip.x86_64 : OpenJDK 11 API documentation compressed in
java-1.8.0-openjdk-headless.x86_64 : OpenJDK Headless Runtime Environment 8


Install the above mentioned JDK using : yum install java-1.8.0-openjdk-devel.x86_64

After installing the JDK issue was resolved.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2. Error statement:
This environment variable is needed to run this program
NB: JAVA_HOME should point to a JDK not a JRE

Solution: the JAVA_HOME variable should be set to jdk not to JRE. The content of the target directory should be as below:

[root@ip-172-31-88-36 ~]# cd /usr/lib/jvm/java-openjdk
[root@ip-172-31-88-36 java-openjdk]# ll
total 4
drwxr-xr-x. 2 root root 4096 Mar  5 06:48 bin
drwxr-xr-x. 3 root root  132 Mar  5 06:48 include
drwxr-xr-x. 4 root root   28 Mar  5 06:44 jre
drwxr-xr-x. 3 root root  144 Mar  5 06:48 lib
drwxr-xr-x. 2 root root  200 Mar  5 06:48 tapset

We need to set this path in the jenkins JAVA configuration and also export this path in the server environment variable(either local or global), like below

JAVA_HOME=/usr/lib/jvm/java-openjdk
M2_HOME=/opt/maven/apache-maven-3.6.3
M2=$M2_HOME/bin
PATH=$PATH:$HOME/bin:$M2_HOME:$M2:$JAVA_HOME


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

3. While using jenkins pipeline, I was getting error saying "

